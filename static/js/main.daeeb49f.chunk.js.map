{"version":3,"sources":["pages/login/components/form.js","pages/login/index.js","pages/sign-up/components/form.js","pages/sign-up/index.js","common/components/LoginProtector.js","pages/task/Component/addNewTask/addNewTask.js","pages/task/Component/taskTable.js","common/components/header.js","pages/task/index.js","pages/users/components/addNewUser.js","pages/users/index.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","props","handleForm","event","name","target","value","setState","formValidation","state","userName","password","errorMessage","setTimeout","manageSignIn","isAuthenticUser","ExistingUsers","JSON","parse","localStorage","getItem","Array","i","length","user","userData","setItem","window","location","href","protocol","stateData","this","className","type","autoComplete","Username","onChange","required","onClick","React","Component","Login","SingnUpForm","validation","firstName","lastName","confirmPassword","console","log","checkExistingUser","updateUserDB","push","stringify","successMessage","registerUser","isFormvalid","isExistingUser","placeholder","SignUp","LoginProtector","WrappedComponent","isUserLogedin","AddNewTask","handleChange","taskName","taskAssignee","taskAssigner","taskCreationDate","taskDeadlineDate","taskDescription","saveChange","checkExistingTask","ExistingTask","ExistingTasks","taskData","task","data","arrayDetails","Modal","setAppElement","Tasktable","useState","modalIsOpen","setModalIsOpen","isOpen","shouldCloseOnOverlayClick","onRequestClose","map","item","id","Header","redirectUrl","removeItem","AddUser","Users","usersData","App","basename","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daeeb49f.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Login.css\";\r\n\r\nclass LoginForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      userName: null,\r\n      password: null,\r\n      errorMessage: null,\r\n    };\r\n  }\r\n  handleForm = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  \r\n  formValidation = () => {\r\n    const { userName, password } = this.state;\r\n    if(userName && password){\r\n      return true;\r\n    }\r\n    this.setState({ errorMessage: \"Please enter all required fields.\"});\r\n    setTimeout(()=> {\r\n      this.setState({ errorMessage: null})\r\n    },2000)\r\n  }\r\n\r\n  manageSignIn = () => {\r\n    const { userName, password } = this.state;\r\n    let isAuthenticUser = false;\r\n    const isLoginFormValid = this.formValidation();             //true\r\n\r\n    if(isLoginFormValid){\r\n      // get all existing users\r\n      const ExistingUsers = JSON.parse(localStorage.getItem(\"users\"));\r\n      \r\n      // if any user is not registered then users will not exist in local storage\r\n      if(ExistingUsers && ExistingUsers instanceof Array){\r\n        for(let i=0; i<ExistingUsers.length; i++){\r\n          const user = ExistingUsers[i];\r\n          if( (userName === user.userName) && (password === user.password)){\r\n            const userData = { userName };\r\n            localStorage.setItem('logedInUserData', userData);\r\n            isAuthenticUser = true;\r\n            window.location.href = window.location.protocol + '/task';\r\n            break;       \r\n          } \r\n        }\r\n      }\r\n\r\n      if(!isAuthenticUser || !ExistingUsers){\r\n        this.setState({ errorMessage: \"User doesn't  exist.\"}) \r\n        setTimeout(()=> {\r\n            this.setState({ errorMessage: null})\r\n        },2000)\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const stateData = this.state;\r\n    return (\r\n      <div className=\"login_child_first\">\r\n        <h6>Login</h6>\r\n        {stateData.errorMessage ? (\r\n            <p className=\"danger text-center\">{stateData.errorMessage}</p>\r\n        ):null}\r\n        <div className=\"login_child_first_form\">\r\n          <label>Username </label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            autoComplete=\"off\"\r\n            value={stateData.Username}\r\n            onChange={this.handleForm}\r\n            required\r\n          />\r\n          <label>Password </label>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            autoComplete=\"off\"\r\n            value={stateData.password}\r\n            onChange={this.handleForm}\r\n            required\r\n          />\r\n          <button\r\n            className=\"login_child_first_form_submit\"\r\n            onClick={this.manageSignIn}\r\n          >\r\n            Sign in\r\n          </button>\r\n          <p>\r\n            New here ?  <a href=\"/sign-up\">SignUp</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginForm;","import React from 'react';\r\nimport LoginForm from './components/form';\r\nclass Login extends React.Component{\r\n    render(){\r\n        return <LoginForm />\r\n    }\r\n};\r\n\r\nexport default Login;","import React from \"react\";\r\n\r\nclass SingnUpForm extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errorMessage: null,\r\n      successMessage: null,\r\n    };\r\n  }\r\n\r\n  handleForm = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  validation = () => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      userName,\r\n      password,\r\n      confirmPassword,\r\n    } = this.state;\r\n    console.log(\r\n      \"hey\",\r\n      firstName,\r\n      lastName,\r\n      userName,\r\n      password,\r\n      confirmPassword\r\n    );\r\n\r\n    if (\r\n      firstName &&\r\n      userName &&\r\n      password &&\r\n      confirmPassword &&\r\n      password === confirmPassword\r\n    ) {\r\n      return true;\r\n    } else if (password !== confirmPassword) {\r\n      this.setState({\r\n        errorMessage: \"password and confirm password are not same.\",\r\n      });\r\n    } else {\r\n      this.setState({ errorMessage: \"Please enter all required fields.\" });\r\n    }\r\n\r\n    setTimeout(() => {\r\n      this.setState({ errorMessage: null });\r\n    }, 2000);\r\n    return false;\r\n  };\r\n\r\n  // To check if user exists in database [ Here Local storage is acting as database]\r\n  checkExistingUser = () => {\r\n    const { userName } = this.state;\r\n    const ExistingUsers = JSON.parse(localStorage.getItem(\"users\"));\r\n\r\n    // if no existing user return true\r\n    if (!ExistingUsers) {\r\n      return true;\r\n    }\r\n\r\n    // if existing users array exists check details\r\n    for (let i = 0; i < ExistingUsers.length; i++) {\r\n      const user = ExistingUsers[i];\r\n      if (userName === user.userName) {\r\n        this.setState({ errorMessage: \"User name already exist.\" });\r\n        setTimeout(() => {\r\n          this.setState({ errorMessage: null });\r\n        }, 2000);\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  // Update user database\r\n  updateUserDB = () => {\r\n    const ExistingUsers = JSON.parse(localStorage.getItem(\"users\"));\r\n    const { firstName, lastName, userName, password } = this.state;\r\n    const userData = { firstName, lastName, userName, password };\r\n    if (ExistingUsers && ExistingUsers instanceof Array) {\r\n      ExistingUsers.push(userData);\r\n      localStorage.setItem(\"users\", JSON.stringify(ExistingUsers));\r\n    } else {\r\n      const user = [userData];\r\n      localStorage.setItem(\"users\", JSON.stringify(user));\r\n    }\r\n    this.setState({ successMessage: \"User register Successfully\" });\r\n    // redirect to login after successful register\r\n    setTimeout(() => {\r\n      this.setState({ successMessage: null });\r\n      window.location.href = window.location.protocol + \"/\";\r\n    }, 5000);\r\n  };\r\n\r\n  registerUser = () => {\r\n    const isFormvalid = this.validation(); // check if form is valid\r\n    const isExistingUser = this.checkExistingUser(); // check if user existing user or not\r\n\r\n    // if form is valid and username doesn't exist in db register user\r\n    if (isFormvalid && isExistingUser) {\r\n      // const { firstName, lastName, userName, password } = this.state;\r\n      this.updateUserDB(); //Update users DB\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const stateData = this.state;\r\n    return (\r\n      <div className=\"registration\">\r\n        <h5>Sign Up</h5>\r\n        {stateData.errorMessage ? (\r\n          <p className=\"danger text-center\">{stateData.errorMessage}</p>\r\n        ) : null}\r\n        {stateData.successMessage ? (\r\n          <p className=\"success text-center\">{stateData.successMessage}</p>\r\n        ) : null}\r\n        <div className=\"registration_form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            className=\"registration_form_input\"\r\n            placeholder=\"First Name *\"\r\n            value={stateData.firstName}\r\n            onChange={this.handleForm}\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            className=\"registration_form_input\"\r\n            placeholder=\"Last Name (optional) \"\r\n            value={stateData.lastName}\r\n            onChange={this.handleForm}\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            className=\"registration_form_input\"\r\n            placeholder=\"User Name *\"\r\n            value={stateData.userName}\r\n            onChange={this.handleForm}\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"registration_form_input\"\r\n            placeholder=\"Password *\"\r\n            value={stateData.password}\r\n            onChange={this.handleForm}\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            className=\"registration_form_input\"\r\n            placeholder=\"Confirm Password *\"\r\n            onChange={this.handleForm}\r\n          />\r\n          <button\r\n            className=\"registration_form_submit\"\r\n            onClick={this.registerUser}\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n        <p className=\"info-text\">\r\n          Already have an account ? <a href=\"/\">Login</a>\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default SingnUpForm;\r\n","import React from 'react';\r\nimport './styles/signUp.css';\r\nimport SingnUpForm from './components/form';\r\n\r\n\r\nclass SignUp extends React.Component{\r\n    render(){\r\n        return (<SingnUpForm />)\r\n    }\r\n};\r\n\r\nexport default SignUp;","import React from \"react\";\r\nimport Login from \"../../pages/login\";\r\n\r\nconst LoginProtector = (WrappedComponent) => {\r\n  class LoginRequired extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        isUserLogedin: true,\r\n      };\r\n    }\r\n\r\n    render() {\r\n      return this.state.isUserLogedin ? <WrappedComponent /> : <Login />;\r\n    }\r\n  }\r\n\r\n  return LoginRequired;\r\n};\r\n\r\nexport default LoginProtector;\r\n","import React from \"react\";\r\nimport \"./style/addNewTask.css\";\r\n\r\nclass AddNewTask extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.arrayDetails,\r\n      taskName: \"\",\r\n      taskAssignee: \"\",\r\n      taskAssigner: \"\",\r\n      taskCreationDate: \"\",\r\n      taskDeadlineDate: \"\",\r\n      taskDescription: \"\",\r\n      successMessage: null,\r\n      errorMessage: null,\r\n    };\r\n    console.log(\"data is \", this.state.data);\r\n  }\r\n  handleChange = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  validation = () => {\r\n    const {\r\n      taskName,\r\n      taskAssignee,\r\n      taskAssigner,\r\n      taskCreationDate,\r\n      taskDeadlineDate,\r\n      taskDescription,\r\n    } = this.state;\r\n    if (\r\n     \r\n      taskName &&\r\n      taskAssignee &&\r\n      taskAssigner &&\r\n      taskCreationDate &&\r\n      taskDeadlineDate &&\r\n      taskDescription\r\n    ) {\r\n      return true;\r\n    } else {\r\n      this.setState({ errorMessage: \"Please enter all required fields.\" });\r\n    }\r\n    setTimeout(() => {\r\n      this.setState({ errorMessage: null });\r\n    }, 2000);\r\n    return false;\r\n  };\r\n\r\n  saveChange = () => {\r\n    const isTaskFieldValid = this.validation();\r\n    // const isExistingTask = this.checkExistingTask();\r\n\r\n    if (isTaskFieldValid) {\r\n      this.updateUserDB();\r\n    }\r\n  };\r\n\r\n  checkExistingTask = () => {\r\n    const { taskName } = this.state;\r\n    const ExistingTask = JSON.parse(localStorage.getItem(\"tasks\"));\r\n\r\n    if (!ExistingTask) {\r\n      return true;\r\n    }\r\n\r\n    for (let i = 0; i < ExistingTask.length; i++) {\r\n      const task = ExistingTask[i];\r\n      if (taskName === task.taskName) {\r\n        this.setState({ errorMessage: \"Task already exist.\" });\r\n        setTimeout(() => {\r\n          this.setState({ errorMessage: null });\r\n        }, 2000);\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  };\r\n\r\n  updateUserDB = () => {\r\n    const ExistingTasks = JSON.parse(localStorage.getItem(\"tasks\"));\r\n    const {\r\n      taskName,\r\n      taskAssignee,\r\n      taskAssigner,\r\n      taskCreationDate,\r\n      taskDeadlineDate,\r\n      taskDescription,\r\n    } = this.state;\r\n    const taskData = {\r\n      taskName,\r\n      taskAssignee,\r\n      taskAssigner,\r\n      taskCreationDate,\r\n      taskDeadlineDate,\r\n      taskDescription,\r\n    };\r\n    if (ExistingTasks && ExistingTasks instanceof Array) {\r\n      ExistingTasks.push(taskData);\r\n      localStorage.setItem(\"tasks\", JSON.stringify(ExistingTasks));\r\n    } else {\r\n      const task = [taskData];\r\n      localStorage.setItem(\"tasks\", JSON.stringify(task));\r\n    }\r\n    this.setState({ successMessage: \"Task created Successfully\" });\r\n    // redirect to login after successful register\r\n    setTimeout(() => {\r\n      this.setState({ successMessage: null });\r\n      window.location.href = window.location.protocol + \"/task\";\r\n    }, 5000);\r\n  };\r\n\r\n  render() {\r\n    const stateData = this.state;\r\n    return (\r\n      <div className=\"addNewTask_main_div\">\r\n        <div className=\"task_fields\">\r\n          <h5>Add new task</h5>\r\n          {stateData.errorMessage ? (\r\n            <p className=\"danger text-center\">{stateData.errorMessage}</p>\r\n          ) : null}\r\n          {stateData.successMessage ? (\r\n            <p className=\"success text-center\">{stateData.successMessage}</p>\r\n          ) : null}\r\n         \r\n\r\n          <label className=\"task_label\">Task Name*</label>\r\n          <input\r\n            className=\"task_input\"\r\n            type=\"text\"\r\n            name=\"taskName\"\r\n            value={stateData.taskName}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label className=\"task_label\">Task Assignee*</label>\r\n          <input\r\n            className=\"task_input\"\r\n            type=\"text\"\r\n            name=\"taskAssignee\"\r\n            value={stateData.taskAssignee}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label className=\"task_label\">Task Assigner*</label>\r\n          <input\r\n            className=\"task_input\"\r\n            type=\"text\"\r\n            name=\"taskAssigner\"\r\n            value={stateData.taskAssigner}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label className=\"task_label\">Task Creation Date*</label>\r\n          <input\r\n            className=\"task_input\"\r\n            type=\"text\"\r\n            name=\"taskCreationDate\"\r\n            value={stateData.taskCreationDate}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label className=\"task_label\">Task Deadline Date*</label>\r\n          <input\r\n            className=\"task_input\"\r\n            type=\"text\"\r\n            name=\"taskDeadlineDate\"\r\n            value={stateData.taskDeadlineDate}\r\n            onChange={this.handleChange}\r\n          />\r\n          <label className=\"task_label\">Task Description*</label>\r\n          <input\r\n            className=\"task_input\"\r\n            type=\"text\"\r\n            name=\"taskDescription\"\r\n            value={stateData.taskDescription}\r\n            onChange={this.handleChange}\r\n          />\r\n          <button onClick={this.saveChange} className=\"submit_button\">\r\n            Add\r\n          </button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default AddNewTask;\r\n","import React, { useState } from \"react\";\r\nimport \"../Style/style.css\";\r\nimport Modal from \"react-modal\";\r\nimport AddNewTask from \"./addNewTask/addNewTask\";\r\n\r\nModal.setAppElement(\"#root\");\r\nconst Tasktable = () => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const ExistingTasks = JSON.parse(localStorage.getItem(\"tasks\")) || [];\r\n  console.log(ExistingTasks)\r\n  return (\r\n    <div className=\"task_main_div\">\r\n      <button\r\n        onClick={() => setModalIsOpen(true)}\r\n        className=\"addUserModal_button\"\r\n      >\r\n        + Add new task\r\n      </button>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={false}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n      >\r\n        <div>\r\n          <button\r\n            className=\"addUserModal_close_button\"\r\n            onClick={() => setModalIsOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n        <AddNewTask />\r\n      </Modal>\r\n\r\n      <table className=\"task-table\">\r\n        <thead>\r\n          <tr className=\"table-column\">\r\n            <th>Task Name</th>\r\n            <th>Task Assignee</th>\r\n            <th>Task Assigner</th>\r\n            <th>Task Creation Date</th>\r\n            <th>Task Deadline Date</th>\r\n            <th>Task Description</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {ExistingTasks && ExistingTasks instanceof Array && ExistingTasks.map((item) => {\r\n            return (\r\n              <tr key={item.id}>\r\n                <td>{item.taskName}</td>\r\n                <td>{item.taskAssignee}</td>\r\n                <td>{item.taskAssigner}</td>\r\n                <td>{item.taskCreationDate}</td>\r\n                <td>{item.taskDeadlineDate}</td>\r\n                <td>{item.taskDescription}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasktable;\r\n","import React from 'react';\r\nimport './Style/style.css'\r\n\r\nconst Header = (props) => {\r\n    const { redirectUrl, name } = props;\r\n\r\n    const signout = () => {\r\n        const isUserLogedIn = localStorage.getItem('logedInUserData');          // Doubt\r\n        if(isUserLogedIn){\r\n            localStorage.removeItem('logedInUserData');                        //Doubt\r\n            window.location.href = window.location.protocol + '/';\r\n        }\r\n    }\r\n\r\n    return <div className=\"header\">\r\n            <a href={redirectUrl} className=\"accordian-link\">{name}</a>\r\n            <a onClick={signout} className=\"signout-btn\">Signout</a>\r\n        </div>;\r\n};\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"./Style/style.css\";\r\nimport LoginProtector from \"../../common/components/LoginProtector\";\r\nimport Tasktable from \"./Component/taskTable\";\r\nimport Header from \"../../common/components/header\";\r\n\r\nclass Task extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"task-page\">\r\n        <div className=\"header-section\">\r\n          <Header redirectUrl=\"/users\" name=\"User\"/>\r\n        </div>\r\n        <div className=\"task-section\">\r\n          <Tasktable />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LoginProtector(Task);\r\n","import React from \"react\";\r\n\r\nclass AddUser extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      firstName: \"\",\r\n      lastName: \"\",\r\n      userName: \"\",\r\n      password: \"\",\r\n      confirmPassword: \"\",\r\n      errorMessage: null,\r\n      successMessage: null,\r\n    };\r\n  }\r\n\r\n  handleForm = (event) => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n  \r\n  validation = () => {\r\n    const { firstName, lastName, userName, password , confirmPassword } = this.state;\r\n    console.log(\"hey\", firstName, lastName, userName, password , confirmPassword)\r\n    \r\n    if(firstName && userName && password && confirmPassword && (password === confirmPassword)){\r\n        return true\r\n    } else if( password !== confirmPassword){\r\n        this.setState({ errorMessage: \"password and confirm password are not same.\"})\r\n    } else {\r\n        this.setState({ errorMessage: \"Please enter all required fields.\"})\r\n    }\r\n\r\n    setTimeout(()=> {\r\n        this.setState({ errorMessage: null})\r\n    },2000)\r\n    return false\r\n  }\r\n\r\n  // To check if user exists in database [ Here Local storage is acting as database]\r\n  checkExistingUser = () => {\r\n      const { userName } = this.state;\r\n      const ExistingUsers = JSON.parse(localStorage.getItem(\"users\"));\r\n      \r\n      // if no existing user return true\r\n      if(!ExistingUsers){\r\n          return true;\r\n      }\r\n\r\n      // if existing users array exists check details\r\n      for(let i=0; i<ExistingUsers.length; i++){\r\n          const user = ExistingUsers[i];\r\n          if(userName === user.userName){\r\n            this.setState({ errorMessage: \"User name already exist.\"}) \r\n            setTimeout(()=> {\r\n                this.setState({ errorMessage: null})\r\n            },2000)\r\n            return false;\r\n          }\r\n      }\r\n      return true;\r\n  }\r\n  \r\n  // Update user database\r\n  updateUserDB = () => {\r\n    const ExistingUsers = JSON.parse(localStorage.getItem(\"users\"));\r\n    const { firstName, lastName, userName, password } = this.state;\r\n    const userData = { firstName, lastName, userName, password };\r\n    if(ExistingUsers && ExistingUsers instanceof Array){\r\n        ExistingUsers.push(userData);\r\n        localStorage.setItem(\"users\", JSON.stringify(ExistingUsers));\r\n    } else {\r\n        const user = [userData]\r\n        localStorage.setItem(\"users\", JSON.stringify(user));\r\n    }\r\n    this.setState({ successMessage: \"User register Successfully\"})\r\n    // redirect to login after successful register\r\n    setTimeout(()=> {\r\n        this.setState({ successMessage: null})\r\n        window.location.href = window.location.protocol + \"/users\"\r\n    },1000)\r\n  }\r\n\r\n  registerUser = () => {\r\n    const isFormvalid = this.validation(); // check if form is valid\r\n    const isExistingUser = this.checkExistingUser(); // check if user existing user or not\r\n    \r\n    // if form is valid and username doesn't exist in db register user\r\n    if(isFormvalid && isExistingUser){\r\n        // const { firstName, lastName, userName, password } = this.state;\r\n        this.updateUserDB(); //Update users DB\r\n    }\r\n    \r\n  };\r\n\r\n  render() {\r\n    const stateData = this.state;\r\n    return (\r\n      <div className=\"registration\">\r\n        <h5>Add New User</h5>\r\n        {stateData.errorMessage ? (\r\n            <p className=\"danger text-center\">{stateData.errorMessage}</p>\r\n        ):null}\r\n        {stateData.successMessage ? (\r\n            <p className=\"success text-center\">{stateData.successMessage}</p>\r\n        ):null}\r\n        <div className=\"registration_form\">\r\n          <input\r\n            type=\"text\"\r\n            name=\"firstName\"\r\n            className=\"registration_form_input\"\r\n            placeholder=\"First Name *\"\r\n            value={stateData.firstName}\r\n            onChange={this.handleForm}\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"lastName\"\r\n            className=\"registration_form_input\"\r\n            placeholder=\"Last Name (optional) \"\r\n            value={stateData.lastName}\r\n            onChange={this.handleForm}\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            className=\"registration_form_input\"\r\n            placeholder=\"User Name *\"\r\n            value={stateData.userName}\r\n            onChange={this.handleForm}\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            className=\"registration_form_input\"\r\n            placeholder=\"Password *\"\r\n            value={stateData.password}\r\n            onChange={this.handleForm}\r\n            autoComplete=\"off\"\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            name=\"confirmPassword\"\r\n            className=\"registration_form_input\"\r\n            placeholder=\"Confirm Password *\"\r\n            onChange={this.handleForm}\r\n          />\r\n          <button\r\n            className=\"registration_form_submit\"\r\n            onClick={this.registerUser}\r\n          >\r\n            Add\r\n          </button>\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser\r\n\r\n","import React, { useState } from \"react\";\r\nimport \"./Style/index.css\";\r\nimport Header from \"../../common/components/header\";\r\nimport Modal from \"react-modal\";\r\nimport AddUser from \"./components/addNewUser\";\r\n\r\nModal.setAppElement(\"#root\");\r\nconst Users = () => {\r\n  const [modalIsOpen, setModalIsOpen] = useState(false);\r\n  const usersData = JSON.parse(localStorage.getItem(\"users\")) || [] ;\r\n  console.log(usersData);\r\n  return (\r\n    <div className=\"user_main_div\">\r\n      <Header redirectUrl=\"/task\" name=\"Tasks\" />\r\n      <button\r\n        onClick={() => setModalIsOpen(true)}\r\n        className=\"addUserModal_button\"\r\n      >\r\n        + Add new user\r\n      </button>\r\n      <Modal\r\n        isOpen={modalIsOpen}\r\n        shouldCloseOnOverlayClick={false}\r\n        onRequestClose={() => setModalIsOpen(false)}\r\n      >\r\n        <div>\r\n          <button\r\n            className=\"addUserModal_close_button\"\r\n            onClick={() => setModalIsOpen(false)}\r\n          >\r\n            Close\r\n          </button>\r\n        </div>\r\n        <AddUser />\r\n      </Modal>\r\n      <table className=\"task-table\">\r\n        <thead>\r\n          <tr className=\"table-column\">\r\n            <th>First Name</th>\r\n            <th>last Name</th>\r\n            <th>userName</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {usersData && usersData instanceof Array && usersData.map((item) => {\r\n            return (\r\n              <tr key={item.userName}>\r\n                <td>{item.firstName}</td>\r\n                <td>{item.lastName}</td>\r\n                <td>{item.userName}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Login from \"../src/pages/login\";\r\nimport SignUp from \"../src/pages/sign-up\";\r\nimport Task from \"../src/pages/task\";\r\nimport Users from \"../src/pages/users\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router basename=\"/\">\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Login />\r\n        </Route>\r\n        <Route path=\"/sign-up\">\r\n          <SignUp />\r\n        </Route>\r\n        <Route path=\"/task\">\r\n          <Task />\r\n        </Route>\r\n        <Route path=\"/users\">\r\n          <Users />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}